<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiBanShi.DianShiNet.dao.mapperJava1.HionDuty2015Mapper">
  <resultMap id="BaseResultMap" type="com.aiBanShi.DianShiNet.dto.HionDuty2015">
    <id column="Recid" jdbcType="INTEGER" property="recid" />
    <result column="StaffName" jdbcType="VARCHAR" property="staffname" />
    <result column="QX1" jdbcType="VARCHAR" property="qx1" />
    <result column="QX2" jdbcType="VARCHAR" property="qx2" />
    <result column="QXValue" jdbcType="VARCHAR" property="qxvalue" />
    <result column="OrderCol" jdbcType="INTEGER" property="ordercol" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Recid, StaffName, QX1, QX2, QXValue, OrderCol
  </sql>
  <select id="selectByExample" parameterType="com.aiBanShi.DianShiNet.dto.HionDuty2015Example" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Hion_Duty2015
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Hion_Duty2015
    where Recid = #{recid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Hion_Duty2015
    where Recid = #{recid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aiBanShi.DianShiNet.dto.HionDuty2015Example">
    delete from Hion_Duty2015
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aiBanShi.DianShiNet.dto.HionDuty2015">
    insert into Hion_Duty2015 (StaffName, QX1,
      QX2, QXValue, OrderCol
      )
    values ( #{staffname,jdbcType=VARCHAR}, #{qx1,jdbcType=VARCHAR},
      #{qx2,jdbcType=VARCHAR}, #{qxvalue,jdbcType=VARCHAR}, #{ordercol,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aiBanShi.DianShiNet.dto.HionDuty2015">
    insert into Hion_Duty2015
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recid != null">
        Recid,
      </if>
      <if test="staffname != null">
        StaffName,
      </if>
      <if test="qx1 != null">
        QX1,
      </if>
      <if test="qx2 != null">
        QX2,
      </if>
      <if test="qxvalue != null">
        QXValue,
      </if>
      <if test="ordercol != null">
        OrderCol,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recid != null">
        #{recid,jdbcType=INTEGER},
      </if>
      <if test="staffname != null">
        #{staffname,jdbcType=VARCHAR},
      </if>
      <if test="qx1 != null">
        #{qx1,jdbcType=VARCHAR},
      </if>
      <if test="qx2 != null">
        #{qx2,jdbcType=VARCHAR},
      </if>
      <if test="qxvalue != null">
        #{qxvalue,jdbcType=VARCHAR},
      </if>
      <if test="ordercol != null">
        #{ordercol,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aiBanShi.DianShiNet.dto.HionDuty2015Example" resultType="java.lang.Long">
    select count(*) from Hion_Duty2015
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Hion_Duty2015
    <set>
      <if test="record.recid != null">
        Recid = #{record.recid,jdbcType=INTEGER},
      </if>
      <if test="record.staffname != null">
        StaffName = #{record.staffname,jdbcType=VARCHAR},
      </if>
      <if test="record.qx1 != null">
        QX1 = #{record.qx1,jdbcType=VARCHAR},
      </if>
      <if test="record.qx2 != null">
        QX2 = #{record.qx2,jdbcType=VARCHAR},
      </if>
      <if test="record.qxvalue != null">
        QXValue = #{record.qxvalue,jdbcType=VARCHAR},
      </if>
      <if test="record.ordercol != null">
        OrderCol = #{record.ordercol,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Hion_Duty2015
    set
      StaffName = #{record.staffname,jdbcType=VARCHAR},
      QX1 = #{record.qx1,jdbcType=VARCHAR},
      QX2 = #{record.qx2,jdbcType=VARCHAR},
      QXValue = #{record.qxvalue,jdbcType=VARCHAR},
      OrderCol = #{record.ordercol,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aiBanShi.DianShiNet.dto.HionDuty2015">
    update Hion_Duty2015
    <set>
      <if test="staffname != null">
        StaffName = #{staffname,jdbcType=VARCHAR},
      </if>
      <if test="qx1 != null">
        QX1 = #{qx1,jdbcType=VARCHAR},
      </if>
      <if test="qx2 != null">
        QX2 = #{qx2,jdbcType=VARCHAR},
      </if>
      <if test="qxvalue != null">
        QXValue = #{qxvalue,jdbcType=VARCHAR},
      </if>
      <if test="ordercol != null">
        OrderCol = #{ordercol,jdbcType=INTEGER},
      </if>
    </set>
    where Recid = #{recid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aiBanShi.DianShiNet.dto.HionDuty2015">
    update Hion_Duty2015
    set StaffName = #{staffname,jdbcType=VARCHAR},
      QX1 = #{qx1,jdbcType=VARCHAR},
      QX2 = #{qx2,jdbcType=VARCHAR},
      QXValue = #{qxvalue,jdbcType=VARCHAR},
      OrderCol = #{ordercol,jdbcType=INTEGER}
    where Recid = #{recid,jdbcType=INTEGER}
  </update>
</mapper>